[include Zerog_Purge.cfg]
[include TEST_SPEED.cfg]

[gcode_macro MPC_EXTRUDER]
description: MPC Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(215)|float %}
  MPC_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP} FAN_BREAKPOINTS=11
  TURN_OFF_HEATERS
  SAVE_CONFIG


[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %}
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  TURN_OFF_HEATERS
  SAVE_CONFIG
  
[gcode_macro G29]
gcode: 
  _CG28 # Home all axes
  BED_MESH_CALIBRATE

[gcode_macro CUT_FILAMENT]
description: Cuts filament
gcode:
  G91 ; Relative positioning
  # G1 Z2.0 F3000 ; Move Z down
  G90 ; Absolute positioning
  G1 Y300 F3000; Move to cut position
  G1 X-3 F6000 ; Cut
  G4 P1000
  G1 X30 F300
  G90

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro START_PRINT] 
gcode:
  BED_MESH_CLEAR
  EXCLUDE_OBJECT_DEFINE
  SET_GCODE_OFFSET Z=0
  _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
  
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set soak_time = params.SOAK_TIME|int %}
  
  G28
  G0 Z2

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed}

  # START_HEAT_SOAK SOAK={soak_time} BED_TEMP={target_bed} ; Heatsoak
  G4 P600000 # Wait 10 minutes | Heatsoak

  G28 Z METHOD=CONTACT CALIBRATE=1    # calibrate z offset and beacon model hot
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE RUNS=2 ADAPTIVE=1

  G28 Z METHOD=CONTACT CALIBRATE=0

  Smart_Park

  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={target_extruder} # set extruder temp
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={target_extruder} # Heat extruder and wait

  SET_GCODE_OFFSET Z=0.04    ; add a little offset for hotend thermal expansion
                              ; needs fine tuning, long meltzones require more
  
  G90 # Use absolute coordinates
  G92 E0 # Reset Extruder
  
  ZEROG_PURGE

[gcode_macro END_PRINT] 
gcode:
  G91 ; Relative positioning
  G1 E-10 F2400 ; Retract a bit
  G1 Z0.2 F2400 ; Raise Z
  G1 X5 Y5 F3000 ; Wipe out
  G1 Z10 ; Raise Z more
  G90 ; Absolute positioning
  G1 X10 Y200 ; Present print
  M107 ; Disable Fans
  TURN_OFF_HEATERS
  M84 X Y E ; Disable all steppers but Z

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}

[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}

### Heatsoak | https://github.com/rootiest/zippy-klipper_config/blob/master/extras/start_print_heat_soak.cfg ###
[gcode_macro START_HEAT_SOAK]
gcode:
    {% set SOAK = params.SOAK|default(10)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    M117 Starting Warmup #if the bed is already at the correct target temp, we assume no heat soak is necessary.
    {% if (SOAK) <= 0 or (printer.heater_bed.target >= (BED_TEMP - 20)) %}
    {% else %}
        M117 Heating for Soak
        M190 S{BED_TEMP}
        M117 Starting Soak 
    {% for timer in range( SOAK,0,-1) %} #we cycle once a minute, so we can send an update to keep octoprint happy, rather than just sleeping for the entire soak
        M117 Soak: {timer|int}m remaining 
        M105
        G4 P60000
    {% endfor %}
    M117 Soak Complete
    {% endif %}

### PA TEST ###
[delayed_gcode start_pa_test]
gcode:
    {% set vars = printer["gcode_macro RUN_PA_TEST"] %}
    # Add your start GCode here, for example:
    _CG28
    START_PRINT EXTRUDER={vars.hotend_temp} BED={vars.bed_temp} MATERIAL=PLA
    
    {% set flow_percent = vars.flow_rate|float * 100.0 %}
    {% if flow_percent > 0 %}
        M221 S{flow_percent}
    {% endif %}
    {% set height = printer.configfile.settings.pa_test.height %}  
    {% set pavalue = vars.pa_value %}
    ; If pa_value is 0 then we test the full pa range starting from 0
    {% if  vars.pa_value == 0 %} 
        TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
    {% else %}
        ; make sure that delta and start can not be lower then 0
        {% if vars.pa_value - vars.pa_range <= 0%} 
            {% set delta = vars.pa_range %}
            {% set start = 0 %}
        {% else %}
            ; calculate the pa range that we want to test
            {% set delta = (vars.pa_value + vars.pa_range)  - (vars.pa_value - vars.pa_range)  %} 
            ; calculate the pa start value
            {% set start = vars.pa_value - vars.pa_range %} 
        {% endif %}
        TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={start} FACTOR={delta / height}
    {% endif %}
    ; PRINT_PA_TOWER must be the last command in the start_pa_test script:
    ; it starts a print and then immediately returns without waiting for the print to finish
    PRINT_PA_TOWER {vars.rawparams} FINAL_GCODE_ID=end_pa_test

[delayed_gcode end_pa_test]
gcode:
    END_PRINT
    RESTORE_GCODE_STATE NAME=PA_TEST_STATE

[gcode_macro RUN_PA_TEST]
variable_bed_temp: -1
variable_hotend_temp: -1
variable_pa_value: 0             # Used for further tuning of pa value. If value is not 0 than the tested pa value will only be +/- (determined by the pa_range variable) around of the pa_value variable
variable_pa_range: 0.03          # Only use if pa_value is set to heigher than 0. Used to set the +/- area around pa_value that should be tested
variable_flow_rate: -1
variable_rawparams: ''
gcode:
    # Fail early if the required parameters are not provided
    {% if params.NOZZLE is not defined %}
    {action_raise_error('NOZZLE= parameter must be provided')}
    {% endif %}
    {% if params.TARGET_TEMP is not defined %}
    {action_raise_error('TARGET_TEMP= parameter must be provided')}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=bed_temp VALUE={params.BED_TEMP|default(60)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=hotend_temp VALUE={params.TARGET_TEMP}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_value VALUE={params.PA_VALUE|default(0)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_range VALUE={params.PA_RANGE|default(0.01)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(-1)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=rawparams VALUE="'{rawparams}'"
    SAVE_GCODE_STATE NAME=PA_TEST_STATE
    UPDATE_DELAYED_GCODE ID=start_pa_test DURATION=0.01